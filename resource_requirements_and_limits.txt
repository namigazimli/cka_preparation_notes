Resource requests and limits example:

-----------------------------
pod-definition.yaml         |
-----------------------------
apiVersion: v1              |
kind: Pod                   |
metadata:                   |
  name: simple-webapp       |
  labels:                   |
    name: simple-webapp     |
spec:                       |
  containers:               |
    - name: simple-webapp   |
      image: simple-webapp  |
      ports:                |
        - containerPort: 80 |
  resources:                |
    requests:               |
      memory: "1Gi"         |
      cpu: 1                |
    limits:                 |
      memory: "2Gi"         |
      cpu: 2                |
-----------------------------

Remember that the limits and requests are set for each container within the pod. So what happens when a pod tries exceed resources beyond its specified limit? In case of CPU, Kubernetes throttles the CPU. So that it does not go beyond the specified limit. A container cannot use more CPU resources than its limit. However, this is not the case with the memory. A container can use more memory resources than its limit. So if a pod tries to consume more memory than its limit constantly, the pod will be terminated.
