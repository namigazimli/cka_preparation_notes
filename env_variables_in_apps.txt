--> docker run -e APP_COLOR=pink simple-webapp-color

--------------------------------------
pod-definition.yml                   |
--------------------------------------
apiVersion: v1                       |
kind: Pod                            |
metadata:                            |
  name: simple-webapp-color          |
spec:                                |
  containers:                        |
    - name: simple-webapp-color      |
      image: simple-webapp-color     |
      ports:                         |
        - containerPort: 8080        |
      env:                           |
        - name: APP_COLOR            |
          value: pink                |
--------------------------------------

Given a pod definition file which uses the same image as the docker command. To set an environment variable, use the "env" property. "env" is an array. So, every item under the "env" property starts with a dash, indicating the item in the array. Each item has a name and a value property. The name is the name of the environment variable made available with the container and the value is its value. That was a direct way of specifying the environment variables using a plain key-value pair format. However there are other ways of setting the environment variables such as using ConfigMaps and Secrets. The difference in this case is that instead of specifying value, we use "valueFrom", and then the specification of ConfigMap or Secret.

----------------------------
env:                       |
  - name: APP_COLOR        |---> plain key-value pairs
    value: pink            |
----------------------------

----------------------------
env:                       | 
  - name: APP_COLOR        |
    valueFrom:             |----> ConfigMap
      configMapKeyRef:     |
----------------------------

----------------------------
env:                       |
  - name: APP_COLOR        |----> Secret
    valueFrom:             |
      secretKeyRef:        |
----------------------------
